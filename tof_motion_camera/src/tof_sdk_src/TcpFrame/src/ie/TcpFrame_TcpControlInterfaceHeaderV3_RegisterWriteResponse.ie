###########################################################################
#     PROJECT: Cpp -- TcpFrame
#   COPYRIGHT: R. Hranitzky
#    $RCSfile$
#   $Revision: 2596 $
#      AUTHOR: R. Hranitzky
#  SUBSTITUTE:
#    LANGUAGE: Perl
# DESCRIPTION: the Tcp Control Interface Header V3 specification
###########################################################################


#NOTE: types need big endian encoding

$namespace = "TcpFrame";
$name = "TcpControlInterfaceHeaderV3_RegisterWriteResponse";
$nameid = 10004;
$attributes = { 
               "0Preamble"         => { type => "uint2", init => 41452,    check_serialize => true, no_getset => true  },
               "2ProtocolVersion"  => { type => "uint1", init => 3, check_serialize => true, no_getset => true  },
               "3Command"          => { type => "uint1", init => 4, check_serialize => true, no_getset => true  },
               "4SubCommand"       => { type => "uint1", init => 0, check_serialize => true, no_getset => true  },
               "5Status"           => { type => "uint1"
                                      , init => 0
                                      , check_serialize => [0, 13, 15, 16, 17, 250, 251, 252, 253, 254, 255]
                                      , convert_to_string => {  0 => "0:ok"
                                                             , 13 => "13:invalid handle"
                                                             , 15 => "15:illegal write"
                                                             , 16 => "16:illegal read"
                                                             , 17 => "17:register end"
                                                             , 250 => "250:length exceeds maximum filesize"
                                                             , 251 => "251:header crc16 mismatch"
                                                             , 252 => "252:data crc32 mismatch"
                                                             , 253 => "253:length==0 invalid"
                                                             , 254 => "254:length>0 invalid"
                                                             , 255 => "255:unknown command"
                                                             }
                                      },     
               "6Flags"            => { type => "uint2", init => 1,    check_serialize => true },   #set to 1 to ignore Crc32
               "8Length"           => { type => "uint4", init => 0, check_serialize => true, no_getset => true    },   
               "12RegisterAddress" => { type => "uint2", init => 92   },   #Header Data 0, 1
               "14HeaderData2"     => { type => "uint1",  init => 0,    check_serialize => true, no_getset => true  },
               "15HeaderData3"     => { type => "uint1",  init => 0,    check_serialize => true, no_getset => true  },
               "16CallbackIpVersion"        => { type => "uint1",  init => 0, check_serialize => [0,4]  , no_getset => true  },   #IPV4         #ignore 
               "17Reserved"        => { type => "uint1",  init => 0,    check_serialize => true, no_getset => true  },
               "18Reserved"        => { type => "uint2",  init => 0,    check_serialize => true, no_getset => true  },
               "20Reserved"        => { type => "uint4",  init => 0,    check_serialize => true, no_getset => true  },
               "24Reserved"        => { type => "uint4",  init => 0,    check_serialize => true, no_getset => true  },
               "28Reserved"        => { type => "uint4",  init => 0,    check_serialize => true, no_getset => true  },
               "32Reserved"        => { type => "uint4",  init => 0,    check_serialize => true, no_getset => true  },
               "36Reserved"        => { type => "uint4",  init => 0,    check_serialize => true, no_getset => true  },
               "40Reserved"        => { type => "uint4",  init => 0,    check_serialize => true, no_getset => true  },
               "44Reserved"        => { type => "uint4",  init => 0,    check_serialize => true, no_getset => true  },
               "48Reserved"        => { type => "uint4",  init => 0,    check_serialize => true, no_getset => true  },
               "52Reserved"        => { type => "uint4",  init => 0,    check_serialize => true, no_getset => true  },
               "56Reserved"        => { type => "uint2",  init => 0,    check_serialize => true, no_getset => true  },
               "58DataCrc32"       => { type => "uint4",  init => 0,    check_serialize => true },
               "62HeaderCrc16"     => { type => "uint2",  init => 93     } #checkum over 60 bytes: 2 to 61
             };
